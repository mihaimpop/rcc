{"version":3,"sources":["config/DataHoc.js","config/Request.js","App.js","serviceWorker.js","index.js"],"names":["DataHOC","props","callData","Promise","all","fetch","then","responses","map","response","index","json","data","console","log","setState","state","intervalId","setInterval","this","clearInterval","children","Component","App","totalCases","totalDeaths","totalVaccine","day28Cases","day28Deaths","day28Vaccine","lastUpdate","countDelay","countDuration","setData","features","attributes","value","editingInfo","lastEditDate","preloader","class","renderSmth","JSON","stringify","renderCounter","min","max","colors","randomColor","length","Math","floor","random","className","start","end","delay","duration","countUpRef","ref","Date","href","ReactGA","initialize","pageview","window","location","pathname","search","React","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4481963c.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { dataReq } from './Request';\r\n\r\nexport default class DataHOC extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      intervalId: null,\r\n      data: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const intervalId = setInterval(this.callData, 1800000);\r\n    // store intervalId in the state so it can be accessed later:\r\n    this.setState({ intervalId: intervalId });\r\n    this.callData();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // use intervalId from the state to clear the interval\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n\r\n  callData = () => {\r\n    dataReq()\r\n      .then((responses) =>\r\n        Promise.all(responses.map((response, index) => response.json())),\r\n      )\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.setState({ data });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return this.props.children(data);\r\n  }\r\n}\r\n","const DATA_URL =\r\n  'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/1/' +\r\n  'query?f=json&where=(Confirmed%20%3E%200)%20AND%20(Recovered%3C%3E0)%20AND%20(Country_Region%3D%27Romania%27)' +\r\n  '&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Recovered%20desc%2CCountry_Region%20asc%2C' +\r\n  'Province_State%20asc&outSR=102100&resultOffset=0&resultRecordCount=250&cacheHint=true';\r\n\r\nconst LAST_UPDATE_URL =\r\n  'https://services9.arcgis.com/N9p5hsImWXAccRNI/arcgis/rest/services/Nc2JKvYFoAEOFCG5JSI6/FeatureServer/1?f=json';\r\n\r\nconst TOTAL_CASES_URL =\r\n  'https://services9.arcgis.com/N9p5hsImWXAccRNI/arcgis/rest/services/Nc2JKvYFoAEOFCG5JSI6/FeatureServer/1/query?f=json&cacheHint=true&outFields=*&outStatistics=%5B%7B%22onStatisticField%22%3A%22Confirmed%22%2C%22outStatisticFieldName%22%3A%22value%22%2C%22statisticType%22%3A%22sum%22%7D%5D&resultType=standard&returnGeometry=false&spatialRel=esriSpatialRelIntersects&where=Country_Region%3D%27Romania%27';\r\n\r\nconst TOTAL_DEATHS_URL =\r\n  'https://services9.arcgis.com/N9p5hsImWXAccRNI/arcgis/rest/services/Nc2JKvYFoAEOFCG5JSI6/FeatureServer/2/query?f=json&cacheHint=true&outFields=*&outStatistics=%5B%7B%22onStatisticField%22%3A%22Deaths%22%2C%22outStatisticFieldName%22%3A%22value%22%2C%22statisticType%22%3A%22sum%22%7D%5D&resultType=standard&returnGeometry=false&spatialRel=esriSpatialRelIntersects&where=OBJECTID%3D144';\r\n\r\nconst TOTAL_VACCINE_URL =\r\n  'https://services9.arcgis.com/N9p5hsImWXAccRNI/arcgis/rest/services/Nc2VaCYFoAEOFCG5JSI6/FeatureServer/0/query?f=json&cacheHint=true&outFields=*&outStatistics=%5B%7B%22onStatisticField%22%3A%22Doses_Admin%22%2C%22outStatisticFieldName%22%3A%22value%22%2C%22statisticType%22%3A%22sum%22%7D%5D&resultType=standard&returnGeometry=false&spatialRel=esriSpatialRelIntersects&where=(Province_State%20IS%20NULL)%20AND%20(Country_Region%3D%27Romania%27)';\r\n\r\nconst DAY_28_CASES_URL =\r\n  'https://services9.arcgis.com/N9p5hsImWXAccRNI/arcgis/rest/services/Nc2JKvYFoAEOFCG5JSI6/FeatureServer/4/query?f=json&cacheHint=true&outFields=*&outStatistics=%5B%7B%22onStatisticField%22%3A%22Delta_Confirmed%22%2C%22outStatisticFieldName%22%3A%22value%22%2C%22statisticType%22%3A%22sum%22%7D%5D&resultType=standard&returnGeometry=false&spatialRel=esriSpatialRelIntersects&where=(UID%20%3C%3E%20840)%20AND%20(Country_Region%3D%27Romania%27)';\r\n\r\nconst DAY_28_DEATHS_URL =\r\n  'https://services9.arcgis.com/N9p5hsImWXAccRNI/arcgis/rest/services/Nc2JKvYFoAEOFCG5JSI6/FeatureServer/4/query?f=json&cacheHint=true&outFields=*&outStatistics=%5B%7B%22onStatisticField%22%3A%22Delta_Deaths%22%2C%22outStatisticFieldName%22%3A%22value%22%2C%22statisticType%22%3A%22sum%22%7D%5D&resultType=standard&returnGeometry=false&spatialRel=esriSpatialRelIntersects&where=(UID%20%3C%3E%20840)%20AND%20(Country_Region%3D%27Romania%27)';\r\n\r\nconst DAY_28_VACCINE_ADMINISTERED_URL =\r\n  'https://services9.arcgis.com/N9p5hsImWXAccRNI/arcgis/rest/services/Nc2JKvYFoAEOFCG5JSI6/FeatureServer/4/query?f=json&cacheHint=true&outFields=*&outStatistics=%5B%7B%22onStatisticField%22%3A%22Delta_Doses_Admin%22%2C%22outStatisticFieldName%22%3A%22value%22%2C%22statisticType%22%3A%22sum%22%7D%5D&resultType=standard&returnGeometry=false&spatialRel=esriSpatialRelIntersects&where=(UID%20%3C%3E%20840)%20AND%20(Country_Region%3D%27Romania%27)';\r\n\r\nexport const dataReq = () =>\r\n  Promise.all([\r\n    fetch(TOTAL_CASES_URL),\r\n    fetch(TOTAL_DEATHS_URL),\r\n    fetch(TOTAL_VACCINE_URL),\r\n    fetch(DAY_28_CASES_URL),\r\n    fetch(DAY_28_DEATHS_URL),\r\n    fetch(DAY_28_VACCINE_ADMINISTERED_URL),\r\n    fetch(LAST_UPDATE_URL),\r\n  ]);\r\n","import React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport './App.css';\r\nimport './materialize.css';\r\nimport DataHOC from './config/DataHoc';\r\n\r\nexport default class App extends React.Component {\r\n  data = {\r\n    totalCases: 0,\r\n    totalDeaths: 0,\r\n    totalVaccine: 0,\r\n    day28Cases: 0,\r\n    day28Deaths: 0,\r\n    day28Vaccine: 0,\r\n    lastUpdate: null\r\n  };\r\n  countDelay = 0;\r\n  countDuration = 2.75;\r\n\r\n  componentDidMount() {\r\n    ReactGA.initialize('UA-160610049-1');\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }\r\n\r\n  setData = (data) => {\r\n    if (!data) {\r\n      return;\r\n    }\r\n    const totalCases = data?.[0]?.features?.[0]?.attributes?.value;\r\n    const totalDeaths = data?.[1]?.features?.[0]?.attributes?.value;\r\n    const totalVaccine = data?.[2]?.features?.[0]?.attributes?.value;\r\n    const day28Cases = data?.[3]?.features?.[0]?.attributes?.value;\r\n    const day28Deaths = data?.[4]?.features?.[0]?.attributes?.value;\r\n    const day28Vaccine = data?.[5]?.features?.[0]?.attributes?.value;\r\n    const lastUpdate = data?.[6]?.editingInfo?.lastEditDate;\r\n\r\n    this.data = {\r\n      totalCases,\r\n      totalDeaths,\r\n      totalVaccine,\r\n      day28Cases,\r\n      day28Deaths,\r\n      day28Vaccine,\r\n      lastUpdate\r\n    };\r\n  };\r\n\r\n  preloader = () => (\r\n    <div class=\"preloader-wrapper big active\">\r\n      <div class=\"spinner-layer spinner-blue-only\">\r\n        <div class=\"circle-clipper left\">\r\n          <div class=\"circle\"></div>\r\n        </div>\r\n        <div class=\"gap-patch\">\r\n          <div class=\"circle\"></div>\r\n        </div>\r\n        <div class=\"circle-clipper right\">\r\n          <div class=\"circle\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  renderSmth = (data) => JSON.stringify(data);\r\n\r\n  renderCounter = (data) => {\r\n    if (!data) {\r\n      return this.preloader();\r\n    }\r\n\r\n    const totalCases = data?.[0]?.features?.[0]?.attributes?.value;\r\n    const totalDeaths = data?.[1]?.features?.[0]?.attributes?.value;\r\n    const totalVaccine = data?.[2]?.features?.[0]?.attributes?.value;\r\n    const day28Cases = data?.[3]?.features?.[0]?.attributes?.value;\r\n    const day28Deaths = data?.[4]?.features?.[0]?.attributes?.value;\r\n    const day28Vaccine = data?.[5]?.features?.[0]?.attributes?.value;\r\n    const lastUpdate = data?.[6]?.editingInfo?.lastEditDate;\r\n\r\n    const colors = [\r\n      'purple darken-4',\r\n      'indigo darken-4',\r\n      'deep-purple darken-4',\r\n      'blue darken-4',\r\n      'cyan darken-4',\r\n      'green darken-4',\r\n      'blue-grey darken-4',\r\n      'red darken-4',\r\n      'pink accent-4',\r\n      'indigo accent-4',\r\n      'light-blue darken-4',\r\n      'light-green darken-4'\r\n    ];\r\n    const random = (min, max) =>\r\n      Math.floor(Math.random() * (max - min + 1) + min);\r\n    const randomColor = colors[random(0, colors.length - 1)];\r\n\r\n    return (\r\n      <div className={`card ${randomColor} z-depth-2 own-container`}>\r\n        <span className=\"card-title\">\r\n          <h4 className=\"last-update own-card-title\">\r\n            Romania COVID-19 Stats\r\n          </h4>\r\n        </span>\r\n        <div className=\"card-content\">\r\n          <h5 className=\"inline-data\">\r\n            Total Cases\r\n            <CountUp\r\n              start={0 || this.data.totalCases}\r\n              end={totalCases}\r\n              delay={this.countDelay}\r\n              duration={this.countDuration}\r\n            >\r\n              {({ countUpRef }) => {\r\n                this.setData(data);\r\n                return (\r\n                  <div>\r\n                    <span ref={countUpRef} />\r\n                  </div>\r\n                );\r\n              }}\r\n            </CountUp>\r\n          </h5>\r\n          <h5 className=\"inline-data\">\r\n            Total Deaths\r\n            <CountUp\r\n              start={0 || this.data.totalDeaths}\r\n              end={totalDeaths}\r\n              delay={this.countDelay}\r\n              duration={this.countDuration}\r\n            >\r\n              {({ countUpRef }) => {\r\n                return (\r\n                  <div>\r\n                    <span ref={countUpRef} />\r\n                  </div>\r\n                );\r\n              }}\r\n            </CountUp>\r\n          </h5>\r\n          <h5 className=\"inline-data\">\r\n            Total Vaccine Doses Administered\r\n            <CountUp\r\n              start={0 || this.data.totalVaccine}\r\n              end={totalVaccine}\r\n              delay={this.countDelay}\r\n              duration={this.countDuration}\r\n            >\r\n              {({ countUpRef }) => {\r\n                return (\r\n                  <div>\r\n                    <span ref={countUpRef} />\r\n                  </div>\r\n                );\r\n              }}\r\n            </CountUp>\r\n          </h5>\r\n          <h5 className=\"inline-data\">\r\n            28-Day Cases\r\n            <CountUp\r\n              start={0 || this.data.day28Cases}\r\n              end={day28Cases}\r\n              delay={this.countDelay}\r\n              duration={this.countDuration}\r\n            >\r\n              {({ countUpRef }) => {\r\n                return (\r\n                  <div>\r\n                    <span ref={countUpRef} />\r\n                  </div>\r\n                );\r\n              }}\r\n            </CountUp>\r\n          </h5>\r\n          <h5 className=\"inline-data\">\r\n            28-Day Deaths\r\n            <CountUp\r\n              start={0 || this.data.day28Deaths}\r\n              end={day28Deaths}\r\n              delay={this.countDelay}\r\n              duration={this.countDuration}\r\n            >\r\n              {({ countUpRef }) => {\r\n                return (\r\n                  <div>\r\n                    <span ref={countUpRef} />\r\n                  </div>\r\n                );\r\n              }}\r\n            </CountUp>\r\n          </h5>\r\n          <h5 className=\"inline-data\">\r\n            28-Day Cases\r\n            <CountUp\r\n              start={0 || this.data.day28Vaccine}\r\n              end={day28Vaccine}\r\n              delay={this.countDelay}\r\n              duration={this.countDuration}\r\n            >\r\n              {({ countUpRef }) => {\r\n                return (\r\n                  <div>\r\n                    <span ref={countUpRef} />\r\n                  </div>\r\n                );\r\n              }}\r\n            </CountUp>\r\n          </h5>\r\n        </div>\r\n        <div className=\"last-update\">\r\n          <p className=\"text-center\">\r\n            Last update: {`${new Date(lastUpdate)}`}\r\n          </p>\r\n          <p className=\"text-center\">\r\n            {'Data by '}\r\n            <a href=\"https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6\">\r\n              John Hopkins University\r\n            </a>\r\n          </p>\r\n        </div>\r\n        {/* <div className=\"text-center reference\">\r\n          <label>Update interval: </label>\r\n          <input type=\"number\"></input>\r\n        </div> */}\r\n        <div className=\"card-action\">\r\n          <a href=\"https://github.com/mihaimpop/rcc/tree/master\">Github</a>\r\n          <a href=\"https://staythefuckhome.com/\">\r\n            #staythefuckhome{' '}\r\n            <i class=\"material-icons btn-floating btn-small pulse red\">\r\n              &#10084;\r\n            </i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m12 l12\">\r\n            <DataHOC>{this.renderCounter}</DataHOC>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}